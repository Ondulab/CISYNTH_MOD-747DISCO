/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DWAVESCREENVIEWBASE_HPP
#define DWAVESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dwavescreen_screen/dWaveScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class dWaveScreenViewBase : public touchgfx::View<dWaveScreenPresenter>
{
public:
    dWaveScreenViewBase();
    virtual ~dWaveScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void saveButtonClicked()
    {
        // Override and implement this function in dWaveScreen
    }

    virtual void waveFormOrderSliderChanged(int value)
    {
        // Override and implement this function in dWaveScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Slider slider1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::GraphScroll<100> dynamicGraph1_1;
    touchgfx::GraphElementLine dynamicGraph1_1Line1;
    touchgfx::PainterRGB888 dynamicGraph1_1Line1Painter;
    touchgfx::Slider waveFormOrderSlider;
    touchgfx::TextArea textHarmonization;
    touchgfx::ButtonWithLabel saveButton;
    touchgfx::TextArea textComma_1;
    touchgfx::ButtonWithLabel menuButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<dWaveScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<dWaveScreenViewBase, const touchgfx::Slider&, int> sliderValueConfirmedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // DWAVESCREENVIEWBASE_HPP
