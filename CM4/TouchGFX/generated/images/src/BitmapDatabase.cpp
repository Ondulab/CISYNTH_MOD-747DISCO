// 4.18.0 0xe45fdbb5
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_dark_buttons_round_edge_small[]; // BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID = 0, Size: 170x60 pixels
extern const unsigned char image_dark_buttons_round_edge_small_pressed[]; // BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 1, Size: 170x60 pixels
extern const unsigned char image_dark_check_buttons_check_mark_active[]; // BITMAP_DARK_CHECK_BUTTONS_CHECK_MARK_ACTIVE_ID = 2, Size: 44x44 pixels
extern const unsigned char image_dark_check_buttons_check_mark_inactive[]; // BITMAP_DARK_CHECK_BUTTONS_CHECK_MARK_INACTIVE_ID = 3, Size: 44x44 pixels
extern const unsigned char image_dark_check_buttons_check_mark_normal[]; // BITMAP_DARK_CHECK_BUTTONS_CHECK_MARK_NORMAL_ID = 4, Size: 44x44 pixels
extern const unsigned char image_dark_check_buttons_check_mark_pressed[]; // BITMAP_DARK_CHECK_BUTTONS_CHECK_MARK_PRESSED_ID = 5, Size: 44x44 pixels
extern const unsigned char image_dark_progressindicators_bg_medium_circle_indicator_bg_full[]; // BITMAP_DARK_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID = 6, Size: 104x104 pixels
extern const unsigned char image_dark_progressindicators_bg_medium_text_progress_bg_square[]; // BITMAP_DARK_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID = 7, Size: 84x34 pixels
extern const unsigned char image_dark_progressindicators_fill_medium_circle_indicator_fill_full[]; // BITMAP_DARK_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_FULL_ID = 8, Size: 104x104 pixels
extern const unsigned char image_dark_slider_horizontal_large_indicators_slider_round_nob[]; // BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID = 9, Size: 68x68 pixels
extern const unsigned char image_dark_slider_horizontal_large_slider_round_back[]; // BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID = 10, Size: 672x15 pixels
extern const unsigned char image_dark_slider_horizontal_large_slider_round_fill[]; // BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID = 11, Size: 672x15 pixels
extern const unsigned char image_dark_togglebars_toggle_round_large_button_off[]; // BITMAP_DARK_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID = 12, Size: 128x38 pixels
extern const unsigned char image_dark_togglebars_toggle_round_large_button_on[]; // BITMAP_DARK_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID = 13, Size: 128x38 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_dark_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_check_buttons_check_mark_active, 0, 44, 44, 3, 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_check_buttons_check_mark_inactive, 0, 44, 44, 3, 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_check_buttons_check_mark_normal, 0, 44, 44, 3, 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_check_buttons_check_mark_pressed, 0, 44, 44, 3, 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_progressindicators_bg_medium_circle_indicator_bg_full, 0, 104, 104, 16, 15, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 74, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_progressindicators_bg_medium_text_progress_bg_square, 0, 84, 34, 0, 0, 84, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 34, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_dark_progressindicators_fill_medium_circle_indicator_fill_full, 0, 104, 104, 17, 17, 70, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 70, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_slider_horizontal_large_indicators_slider_round_nob, 0, 68, 68, 13, 9, 42, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 42, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_slider_horizontal_large_slider_round_back, 0, 672, 15, 7, 0, 658, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_slider_horizontal_large_slider_round_fill, 0, 672, 15, 7, 1, 658, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_togglebars_toggle_round_large_button_off, 0, 128, 38, 13, 1, 102, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_togglebars_toggle_round_large_button_on, 0, 128, 38, 13, 1, 102, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
